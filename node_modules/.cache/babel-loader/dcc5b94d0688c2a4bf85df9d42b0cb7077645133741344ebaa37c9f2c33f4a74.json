{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\AddPersona\\\\PersonList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// Function to get a list of persons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPersonList = async userId => {\n  const BASE_URL = 'https://peoplemuseumyeah.uc.r.appspot.com/db';\n  try {\n    const response = await axios.post(`${BASE_URL}/getPersonList`, {\n      userId\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Status:', response.status);\n    console.log('Data:', response.data);\n    return response;\n  } catch (error) {\n    console.error('Error:', error.message);\n    if (error.response) {\n      console.error('Status:', error.response.status);\n      console.error('Data:', error.response.data);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n  }\n};\nconst PersonList = () => {\n  _s();\n  const userId = '1'; // Hardcoded userId\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        const response = await getPersonList(userId);\n        if (response.data && response.data.data) {\n          setPeople(response.data.data);\n        } else {\n          console.log('No data returned');\n        }\n      } catch (error) {\n        console.error('Error fetching people:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPeople();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: people.length > 0 ? people.map((person, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: person.imageLink,\n        alt: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: person.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No people found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(PersonList, \"onSI/0L62U4eSdZ84/pNDd+lLm0=\");\n_c = PersonList;\nexport default PersonList;\nvar _c;\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","getPersonList","userId","BASE_URL","response","post","headers","console","log","status","data","error","message","request","PersonList","_s","people","setPeople","loading","setLoading","setError","fetchPeople","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","person","index","className","src","imageLink","alt","name","description","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/AddPersona/PersonList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n// Function to get a list of persons\r\nconst getPersonList = async (userId) => {\r\n    const BASE_URL = 'https://peoplemuseumyeah.uc.r.appspot.com/db';\r\n\r\n\r\n    try {\r\n        const response = await axios.post(`${BASE_URL}/getPersonList`, {\r\n            userId,\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        console.log('Status:', response.status);\r\n        console.log('Data:', response.data);\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n        if (error.response) {\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.error('No response received:', error.request);\r\n        } else {\r\n            console.error('Error setting up request:', error.message);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst PersonList = () => {\r\n    const userId = '1'; // Hardcoded userId\r\n    const [people, setPeople] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPeople = async () => {\r\n            try {\r\n                const response = await getPersonList(userId);\r\n\r\n\r\n                if (response.data && response.data.data) {\r\n                    setPeople(response.data.data);\r\n                } else {\r\n                    console.log('No data returned');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching people:', error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n\r\n        fetchPeople();\r\n    }, [userId]);\r\n\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {people.length > 0 ? (\r\n                people.map((person, index) => (\r\n                    <div key={index} className=\"person\">\r\n                        <img src={person.imageLink} alt={person.name} />\r\n                        <h3>{person.name}</h3>\r\n                        <p>{person.description}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <div>No people found</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default PersonList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}