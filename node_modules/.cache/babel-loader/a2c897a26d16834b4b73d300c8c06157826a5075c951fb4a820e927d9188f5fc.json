{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\AddCollection\\\\CollectionList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// Function to get a list of collections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCollectionList = async (userId, page = 1, limit = 10, sortBy = 'name', order = 'asc') => {\n  const BASE_URL = 'https://peoplemuseumyeah.uc.r.appspot.com/db';\n  try {\n    const response = await axios.post(`${BASE_URL}/getCollectionList`, {\n      userId,\n      page,\n      limit,\n      sortBy,\n      order\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Status:', response.status);\n    console.log('Data:', response.data);\n    return response;\n  } catch (error) {\n    console.error('Error:', error.message);\n    if (error.response) {\n      console.error('Status:', error.response.status);\n      console.error('Data:', error.response.data);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n  }\n};\nconst CollectionList = () => {\n  _s();\n  const userId = '1'; // Hardcoded userId as a string\n  const [collections, setCollections] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCollections = async () => {\n      try {\n        const response = await getCollectionList(userId);\n        if (response && response.data && response.data.data) {\n          setCollections(response.data.data);\n        } else {\n          console.log('No data returned');\n        }\n      } catch (error) {\n        console.error('Error fetching collections:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCollections();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: collections.length > 0 ? collections.map((collection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: collection.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: collection.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No collections found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(CollectionList, \"4EDEl8YGi/zs+CONQ0W358mp4Ic=\");\n_c = CollectionList;\nexport default CollectionList;\nvar _c;\n$RefreshReg$(_c, \"CollectionList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","getCollectionList","userId","page","limit","sortBy","order","BASE_URL","response","post","headers","console","log","status","data","error","message","request","CollectionList","_s","collections","setCollections","loading","setLoading","setError","fetchCollections","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","collection","index","className","name","description","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/AddCollection/CollectionList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n// Function to get a list of collections\r\nconst getCollectionList = async (userId, page = 1, limit = 10, sortBy = 'name', order = 'asc') => {\r\n    const BASE_URL = 'https://peoplemuseumyeah.uc.r.appspot.com/db';\r\n\r\n\r\n    try {\r\n        const response = await axios.post(`${BASE_URL}/getCollectionList`, {\r\n            userId,\r\n            page,\r\n            limit,\r\n            sortBy,\r\n            order,\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        console.log('Status:', response.status);\r\n        console.log('Data:', response.data);\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n        if (error.response) {\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.error('No response received:', error.request);\r\n        } else {\r\n            console.error('Error setting up request:', error.message);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst CollectionList = () => {\r\n    const userId = '1'; // Hardcoded userId as a string\r\n    const [collections, setCollections] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCollections = async () => {\r\n            try {\r\n                const response = await getCollectionList(userId);\r\n\r\n\r\n                if (response && response.data && response.data.data) {\r\n                    setCollections(response.data.data);\r\n                } else {\r\n                    console.log('No data returned');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching collections:', error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n\r\n        fetchCollections();\r\n    }, []);\r\n\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {collections.length > 0 ? (\r\n                collections.map((collection, index) => (\r\n                    <div key={index} className=\"collection\">\r\n                        <h3>{collection.name}</h3>\r\n                        <p>{collection.description}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <div>No collections found</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CollectionList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}