{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\AddCollection\\\\UpdateCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateCollection = () => {\n  _s();\n  const {\n    collectionId\n  } = useParams(); // Fetch collectionId from URL params\n  const history = useHistory();\n  const [collection, setCollection] = useState({\n    name: '',\n    imageLink: '',\n    description: '',\n    isPublic: false // Assuming isPublic is a boolean field\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCollection = async () => {\n      try {\n        const response = await axios.get(`https://your-api-url.com/collections/${collectionId}`);\n        if (response.data) {\n          setCollection(response.data); // Update collection state with fetched data\n        } else {\n          setError('Collection not found');\n        }\n      } catch (error) {\n        console.error('Error fetching collection:', error);\n        setError('Error fetching collection');\n      }\n    };\n    fetchCollection();\n  }, [collectionId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCollection({\n      ...collection,\n      [name]: value\n    });\n  };\n  const handleUpdate = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.put(`https://your-api-url.com/updateCollection`, {\n        collectionId,\n        newName: collection.name,\n        newImageLink: collection.imageLink,\n        newDescription: collection.description,\n        newIsPublic: collection.isPublic\n      });\n      console.log('Update Response:', response.data);\n      // Optionally handle success message or navigate to another page\n      history.push('/collections'); // Redirect to collections list page after update\n    } catch (error) {\n      console.error('Error updating collection:', error);\n      setError('Error updating collection');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      color: \"primary\",\n      children: \"Update Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Name\",\n      name: \"name\",\n      value: collection.name,\n      onChange: handleChange,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Image Link\",\n      name: \"imageLink\",\n      value: collection.imageLink,\n      onChange: handleChange,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Description\",\n      name: \"description\",\n      value: collection.description,\n      onChange: handleChange,\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Is Public\",\n      name: \"isPublic\",\n      type: \"checkbox\",\n      checked: collection.isPublic,\n      onChange: e => setCollection({\n        ...collection,\n        isPublic: e.target.checked\n      }),\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpdate,\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        marginRight: 2\n      },\n      children: \"Update Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      component: Link,\n      to: \"/collections\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateCollection, \"kt9U4iXpX/SyDByaXjW9FYD3bBY=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = UpdateCollection;\nexport default UpdateCollection;\nvar _c;\n$RefreshReg$(_c, \"UpdateCollection\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","Link","axios","Box","Typography","TextField","Button","jsxDEV","_jsxDEV","UpdateCollection","_s","collectionId","history","collection","setCollection","name","imageLink","description","isPublic","loading","setLoading","error","setError","fetchCollection","response","get","data","console","handleChange","e","value","target","handleUpdate","put","newName","newImageLink","newDescription","newIsPublic","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","variant","gutterBottom","color","fullWidth","label","onChange","marginBottom","type","checked","onClick","marginRight","component","to","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/AddCollection/UpdateCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\n\r\nconst UpdateCollection = () => {\r\n    const { collectionId } = useParams(); // Fetch collectionId from URL params\r\n    const history = useHistory();\r\n\r\n    const [collection, setCollection] = useState({\r\n        name: '',\r\n        imageLink: '',\r\n        description: '',\r\n        isPublic: false, // Assuming isPublic is a boolean field\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCollection = async () => {\r\n            try {\r\n                const response = await axios.get(`https://your-api-url.com/collections/${collectionId}`);\r\n                if (response.data) {\r\n                    setCollection(response.data); // Update collection state with fetched data\r\n                } else {\r\n                    setError('Collection not found');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching collection:', error);\r\n                setError('Error fetching collection');\r\n            }\r\n        };\r\n\r\n        fetchCollection();\r\n    }, [collectionId]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCollection({ ...collection, [name]: value });\r\n    };\r\n\r\n    const handleUpdate = async () => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.put(`https://your-api-url.com/updateCollection`, {\r\n                collectionId,\r\n                newName: collection.name,\r\n                newImageLink: collection.imageLink,\r\n                newDescription: collection.description,\r\n                newIsPublic: collection.isPublic,\r\n            });\r\n            console.log('Update Response:', response.data);\r\n            // Optionally handle success message or navigate to another page\r\n            history.push('/collections'); // Redirect to collections list page after update\r\n        } catch (error) {\r\n            console.error('Error updating collection:', error);\r\n            setError('Error updating collection');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <Typography>Loading...</Typography>;\r\n    }\r\n\r\n    if (error) {\r\n        return <Typography>Error: {error}</Typography>;\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom color=\"primary\">\r\n                Update Collection\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={collection.name}\r\n                onChange={handleChange}\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Image Link\"\r\n                name=\"imageLink\"\r\n                value={collection.imageLink}\r\n                onChange={handleChange}\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={collection.description}\r\n                onChange={handleChange}\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Is Public\"\r\n                name=\"isPublic\"\r\n                type=\"checkbox\"\r\n                checked={collection.isPublic}\r\n                onChange={(e) => setCollection({ ...collection, isPublic: e.target.checked })}\r\n                sx={{ marginBottom: 2 }}\r\n            />\r\n            <Button onClick={handleUpdate} variant=\"contained\" color=\"primary\" sx={{ marginRight: 2 }}>\r\n                Update Collection\r\n            </Button>\r\n            <Button component={Link} to=\"/collections\" variant=\"outlined\" color=\"secondary\">\r\n                Cancel\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UpdateCollection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}