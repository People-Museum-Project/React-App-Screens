{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\AddPersona\\\\UpdatePerson.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePerson = () => {\n  _s();\n  const {\n    personId\n  } = useParams(); // Get personId from URL params\n  const [person, setPerson] = useState({\n    name: '',\n    imageLink: '',\n    description: ''\n  });\n  useEffect(() => {\n    // Fetch person data based on personId\n    const fetchPerson = async () => {\n      try {\n        const response = await axios.post('https://peoplemuseumyeah.uc.r.appspot.com/db/getPerson', {\n          personId\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.data && response.data.person) {\n          setPerson(response.data.person);\n        } else {\n          console.log('Person not found');\n        }\n      } catch (error) {\n        console.error('Error fetching person:', error);\n      }\n    };\n    fetchPerson();\n  }, [personId]);\n  const handleUpdate = async () => {\n    try {\n      // Perform update operation (axios call or similar)\n      // Assuming you have an updatePerson function that handles this\n      // Replace with your actual update logic\n      await axios.put('https://peoplemuseumyeah.uc.r.appspot.com/db/updatePerson', {\n        personId,\n        newName: person.name,\n        newImageLink: person.imageLink,\n        newDescription: person.description,\n        newContext: '',\n        // Add other fields if needed\n        newPublic: true // Example value\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      // After successful update, navigate back to person list\n      window.location.href = '/person-list'; // Direct navigation\n      // Alternatively, use react-router-dom's history to navigate:\n      // history.push('/person-list');\n    } catch (error) {\n      console.error('Error updating person:', error);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPerson({\n      ...person,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      color: \"primary\",\n      sx: {\n        textAlign: 'center'\n      },\n      children: \"Update Person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Name\",\n        name: \"name\",\n        value: person.name,\n        onChange: handleChange,\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Image Link\",\n        name: \"imageLink\",\n        value: person.imageLink,\n        onChange: handleChange,\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Description\",\n        name: \"description\",\n        multiline: true,\n        minRows: 4,\n        value: person.description,\n        onChange: handleChange,\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleUpdate,\n        sx: {\n          marginRight: 1\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/person-list\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePerson, \"jExHb3qyYX9Zs+nPyJctD6mtH1s=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePerson;\nexport default UpdatePerson;\nvar _c;\n$RefreshReg$(_c, \"UpdatePerson\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","axios","Box","Typography","TextField","Button","jsxDEV","_jsxDEV","UpdatePerson","_s","personId","person","setPerson","name","imageLink","description","fetchPerson","response","post","headers","data","console","log","error","handleUpdate","put","newName","newImageLink","newDescription","newContext","newPublic","window","location","href","handleChange","event","value","target","sx","display","flexDirection","alignItems","padding","children","variant","gutterBottom","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","fullWidth","label","onChange","marginBottom","multiline","minRows","onClick","marginRight","component","to","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/AddPersona/UpdatePerson.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\n\r\nconst UpdatePerson = () => {\r\n    const { personId } = useParams(); // Get personId from URL params\r\n    const [person, setPerson] = useState({\r\n        name: '',\r\n        imageLink: '',\r\n        description: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch person data based on personId\r\n        const fetchPerson = async () => {\r\n            try {\r\n                const response = await axios.post('https://peoplemuseumyeah.uc.r.appspot.com/db/getPerson', {\r\n                    personId,\r\n                }, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n                if (response.data && response.data.person) {\r\n                    setPerson(response.data.person);\r\n                } else {\r\n                    console.log('Person not found');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching person:', error);\r\n            }\r\n        };\r\n\r\n        fetchPerson();\r\n    }, [personId]);\r\n\r\n    const handleUpdate = async () => {\r\n        try {\r\n            // Perform update operation (axios call or similar)\r\n            // Assuming you have an updatePerson function that handles this\r\n            // Replace with your actual update logic\r\n            await axios.put('https://peoplemuseumyeah.uc.r.appspot.com/db/updatePerson', {\r\n                personId,\r\n                newName: person.name,\r\n                newImageLink: person.imageLink,\r\n                newDescription: person.description,\r\n                newContext: '', // Add other fields if needed\r\n                newPublic: true, // Example value\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            // After successful update, navigate back to person list\r\n            window.location.href = '/person-list'; // Direct navigation\r\n            // Alternatively, use react-router-dom's history to navigate:\r\n            // history.push('/person-list');\r\n        } catch (error) {\r\n            console.error('Error updating person:', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setPerson({\r\n            ...person,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom color=\"primary\" sx={{ textAlign: 'center' }}>\r\n                Update Person\r\n            </Typography>\r\n            <Box sx={{ width: '100%', maxWidth: 400 }}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={person.name}\r\n                    onChange={handleChange}\r\n                    sx={{ marginBottom: 2 }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Image Link\"\r\n                    name=\"imageLink\"\r\n                    value={person.imageLink}\r\n                    onChange={handleChange}\r\n                    sx={{ marginBottom: 2 }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    multiline\r\n                    minRows={4}\r\n                    value={person.description}\r\n                    onChange={handleChange}\r\n                    sx={{ marginBottom: 2 }}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleUpdate}\r\n                    sx={{ marginRight: 1 }}\r\n                >\r\n                    Update\r\n                </Button>\r\n                <Button\r\n                    component={Link}\r\n                    to=\"/person-list\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UpdatePerson;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}