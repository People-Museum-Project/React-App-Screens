{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\AddPersona\\\\PersonList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Grid, Box, Typography, Card, CardContent, CardMedia } from '@mui/material';\n\n// Function to get a list of persons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPersonList = async userId => {\n  const BASE_URL = 'https://peoplemuseumyeah.uc.r.appspot.com/db';\n  try {\n    const response = await axios.post(`${BASE_URL}/getPersonList`, {\n      userId\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Status:', response.status);\n    console.log('Data:', response.data);\n    return response;\n  } catch (error) {\n    console.error('Error:', error.message);\n    if (error.response) {\n      console.error('Status:', error.response.status);\n      console.error('Data:', error.response.data);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n  }\n};\nconst PersonList = () => {\n  _s();\n  const userId = '1'; // Hardcoded userId as a string\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        const response = await getPersonList(userId);\n        if (response && response.data && response.data.data) {\n          setPeople(response.data.data);\n        } else {\n          console.log('No data returned');\n        }\n      } catch (error) {\n        console.error('Error fetching people:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPeople();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      color: \"primary\",\n      children: \"People List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: people.length > 0 ? people.map((person, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"140\",\n            image: person.imageLink,\n            alt: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              children: person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: person.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"No people found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(PersonList, \"onSI/0L62U4eSdZ84/pNDd+lLm0=\");\n_c = PersonList;\nexport default PersonList;\nvar _c;\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Grid","Box","Typography","Card","CardContent","CardMedia","jsxDEV","_jsxDEV","getPersonList","userId","BASE_URL","response","post","headers","console","log","status","data","error","message","request","PersonList","_s","people","setPeople","loading","setLoading","setError","fetchPeople","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","variant","gutterBottom","color","container","spacing","length","map","person","index","item","xs","sm","md","lg","component","height","image","imageLink","alt","name","description","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/AddPersona/PersonList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Grid, Box, Typography, Card, CardContent, CardMedia } from '@mui/material';\r\n\r\n// Function to get a list of persons\r\nconst getPersonList = async (userId) => {\r\n    const BASE_URL = 'https://peoplemuseumyeah.uc.r.appspot.com/db';\r\n\r\n    try {\r\n        const response = await axios.post(`${BASE_URL}/getPersonList`, {\r\n            userId,\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        console.log('Status:', response.status);\r\n        console.log('Data:', response.data);\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Error:', error.message);\r\n        if (error.response) {\r\n            console.error('Status:', error.response.status);\r\n            console.error('Data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.error('No response received:', error.request);\r\n        } else {\r\n            console.error('Error setting up request:', error.message);\r\n        }\r\n    }\r\n};\r\n\r\nconst PersonList = () => {\r\n    const userId = '1'; // Hardcoded userId as a string\r\n    const [people, setPeople] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPeople = async () => {\r\n            try {\r\n                const response = await getPersonList(userId);\r\n\r\n                if (response && response.data && response.data.data) {\r\n                    setPeople(response.data.data);\r\n                } else {\r\n                    console.log('No data returned');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching people:', error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPeople();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ padding: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom color=\"primary\">\r\n                People List\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n                {people.length > 0 ? (\r\n                    people.map((person, index) => (\r\n                        <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\r\n                            <Card>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    height=\"140\"\r\n                                    image={person.imageLink}\r\n                                    alt={person.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" component=\"div\">\r\n                                        {person.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        {person.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                ) : (\r\n                    <Typography variant=\"h6\" color=\"text.secondary\">\r\n                        No people found\r\n                    </Typography>\r\n                )}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PersonList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}