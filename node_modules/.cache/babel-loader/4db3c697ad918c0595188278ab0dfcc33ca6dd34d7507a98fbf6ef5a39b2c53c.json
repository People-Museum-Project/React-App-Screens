{"ast":null,"code":"var _jsxFileName = \"/root/people-museum/YI/React-App-Screens/src/context/CollectionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  getCollectionList\n} = require('./utils');\nconst CollectionContext = /*#__PURE__*/createContext();\nexport const useCollections = () => {\n  _s();\n  return useContext(CollectionContext);\n};\n_s(useCollections, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CollectionProvider = ({\n  children\n}) => {\n  _s2();\n  const [collections, setCollections] = useState([]);\n  useEffect(() => {\n    const fetchCollectionsData = async () => {\n      try {\n        const response_getcollectionlist = await getCollectionList('1');\n        if (response_getcollectionlist && response_getcollectionlist.data) {\n          setCollections(response_getcollectionlist.data);\n        }\n      } catch (error) {\n        console.error('Error fetching collections data:', error);\n      }\n    };\n    fetchCollectionsData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CollectionContext.Provider, {\n    value: collections,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s2(CollectionProvider, \"G+QjJaPDabJSR1WZKpsBwJICwwg=\");\n_c = CollectionProvider;\nvar _c;\n$RefreshReg$(_c, \"CollectionProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","getCollectionList","require","CollectionContext","useCollections","_s","CollectionProvider","children","_s2","collections","setCollections","fetchCollectionsData","response_getcollectionlist","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/people-museum/YI/React-App-Screens/src/context/CollectionContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nconst { getCollectionList } = require('./utils');\r\n\r\nconst CollectionContext = createContext();\r\n\r\nexport const useCollections = () => {\r\n  return useContext(CollectionContext);\r\n};\r\n\r\nexport const CollectionProvider = ({ children }) => {\r\n  const [collections, setCollections] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCollectionsData = async () => {\r\n      try {\r\n        const response_getcollectionlist = await getCollectionList('1');\r\n        if (response_getcollectionlist && response_getcollectionlist.data) {\r\n          setCollections(response_getcollectionlist.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching collections data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCollectionsData();\r\n  }, []);\r\n\r\n  return (\r\n    <CollectionContext.Provider value={collections}>\r\n      {children}\r\n    </CollectionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9E,MAAM;EAAEC;AAAkB,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEhD,MAAMC,iBAAiB,gBAAGR,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMS,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAOP,UAAU,CAACK,iBAAiB,CAAC;AACtC,CAAC;AAACE,EAAA,CAFWD,cAAc;AAI3B,OAAO,MAAME,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMc,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,0BAA0B,GAAG,MAAMX,iBAAiB,CAAC,GAAG,CAAC;QAC/D,IAAIW,0BAA0B,IAAIA,0BAA0B,CAACC,IAAI,EAAE;UACjEH,cAAc,CAACE,0BAA0B,CAACC,IAAI,CAAC;QACjD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDH,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACG,iBAAiB,CAACa,QAAQ;IAACC,KAAK,EAAER,WAAY;IAAAF,QAAA,EAC5CA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACb,GAAA,CAvBWF,kBAAkB;AAAAgB,EAAA,GAAlBhB,kBAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}