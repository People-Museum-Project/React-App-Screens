{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\Conversation\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container } from '@mui/material';\nimport QuestionForm from './QuestionForm';\nimport QuestionList from './QuestionList';\nimport Answer from './Answer';\nimport PersonDetails from './PersonDetails';\nimport './Conversation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conversation = () => {\n  _s();\n  const person = {\n    photo: \"https://cdn.theatlantic.com/media/mt/tanehisicoates/Smalls.jpg\",\n    name: \"Robert Smalls\",\n    description: \"Robert Smalls was an enslaved African American who, during and after the American Civil War, gained freedom and became a sea captain, businessman, and politician. He is best known for commandeering a Confederate transport ship, the CSS Planter, and sailing it to freedom past Confederate defenses.\"\n  };\n  const [questions] = useState([\"How did you free yourself and others during the Civil War?\", \"Where did you sail the commandeered ship to in 1862?\"]);\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleAskQuestion = question => {\n    setSelectedQuestion(question);\n    generateAnswer(question);\n  };\n  const generateAnswer = question => {\n    if (question === \"How did you free yourself and others during the Civil War?\") {\n      setAnswer(\"I am Robert Smalls, and I am proud to share how I freed myself and others during the Civil War. On that daring night of May 13, 1862, I made a bold decision to seize control of the Confederate transport ship CSS Planter in Charleston harbor...\");\n    } else if (question === \"Where did you sail the commandeered ship to in 1862?\") {\n      setAnswer(\"After commandeering the ship, I navigated the CSS Planter past Confederate forts and delivered it to the Union forces blockading Charleston Harbor...\");\n    } else {\n      setAnswer(\"This is a placeholder answer for the question: \" + question);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(PersonDetails, {\n      photo: person.photo,\n      name: person.name,\n      description: person.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n      questions: questions,\n      onSelectQuestion: handleAskQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionForm, {\n      onAskQuestion: handleAskQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), selectedQuestion && /*#__PURE__*/_jsxDEV(Answer, {\n      answer: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"k2Nz0bQi1kdWSqZBTbfcB55KzHo=\");\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","Container","QuestionForm","QuestionList","Answer","PersonDetails","jsxDEV","_jsxDEV","Conversation","_s","person","photo","name","description","questions","selectedQuestion","setSelectedQuestion","answer","setAnswer","handleAskQuestion","question","generateAnswer","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectQuestion","onAskQuestion","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/Conversation/Conversation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport QuestionForm from './QuestionForm';\r\nimport QuestionList from './QuestionList';\r\nimport Answer from './Answer';\r\nimport PersonDetails from './PersonDetails';\r\nimport './Conversation.css';\r\n\r\nconst Conversation = () => {\r\n  const person = {\r\n    photo: \"https://cdn.theatlantic.com/media/mt/tanehisicoates/Smalls.jpg\",\r\n    name: \"Robert Smalls\",\r\n    description: \"Robert Smalls was an enslaved African American who, during and after the American Civil War, gained freedom and became a sea captain, businessman, and politician. He is best known for commandeering a Confederate transport ship, the CSS Planter, and sailing it to freedom past Confederate defenses.\"\r\n  };\r\n\r\n  const [questions] = useState([\r\n    \"How did you free yourself and others during the Civil War?\",\r\n    \"Where did you sail the commandeered ship to in 1862?\"\r\n  ]);\r\n\r\n  const [selectedQuestion, setSelectedQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  const handleAskQuestion = (question) => {\r\n    setSelectedQuestion(question);\r\n    generateAnswer(question);\r\n  };\r\n\r\n  const generateAnswer = (question) => {\r\n    if (question === \"How did you free yourself and others during the Civil War?\") {\r\n      setAnswer(\"I am Robert Smalls, and I am proud to share how I freed myself and others during the Civil War. On that daring night of May 13, 1862, I made a bold decision to seize control of the Confederate transport ship CSS Planter in Charleston harbor...\");\r\n    } else if (question === \"Where did you sail the commandeered ship to in 1862?\") {\r\n      setAnswer(\"After commandeering the ship, I navigated the CSS Planter past Confederate forts and delivered it to the Union forces blockading Charleston Harbor...\");\r\n    } else {\r\n      setAnswer(\"This is a placeholder answer for the question: \" + question);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <PersonDetails\r\n        photo={person.photo}\r\n        name={person.name}\r\n        description={person.description}\r\n      />\r\n      <QuestionList questions={questions} onSelectQuestion={handleAskQuestion} />\r\n      <QuestionForm onAskQuestion={handleAskQuestion} />\r\n      {selectedQuestion && <Answer answer={answer} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Conversation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,gEAAgE;IACvEC,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE;EACf,CAAC;EAED,MAAM,CAACC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAC3B,4DAA4D,EAC5D,sDAAsD,CACvD,CAAC;EAEF,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMmB,iBAAiB,GAAIC,QAAQ,IAAK;IACtCJ,mBAAmB,CAACI,QAAQ,CAAC;IAC7BC,cAAc,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMC,cAAc,GAAID,QAAQ,IAAK;IACnC,IAAIA,QAAQ,KAAK,4DAA4D,EAAE;MAC7EF,SAAS,CAAC,qPAAqP,CAAC;IAClQ,CAAC,MAAM,IAAIE,QAAQ,KAAK,sDAAsD,EAAE;MAC9EF,SAAS,CAAC,uJAAuJ,CAAC;IACpK,CAAC,MAAM;MACLA,SAAS,CAAC,iDAAiD,GAAGE,QAAQ,CAAC;IACzE;EACF,CAAC;EAED,oBACEb,OAAA,CAACN,SAAS;IAACqB,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBhB,OAAA,CAACF,aAAa;MACZM,KAAK,EAAED,MAAM,CAACC,KAAM;MACpBC,IAAI,EAAEF,MAAM,CAACE,IAAK;MAClBC,WAAW,EAAEH,MAAM,CAACG;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFpB,OAAA,CAACJ,YAAY;MAACW,SAAS,EAAEA,SAAU;MAACc,gBAAgB,EAAET;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3EpB,OAAA,CAACL,YAAY;MAAC2B,aAAa,EAAEV;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjDZ,gBAAgB,iBAAIR,OAAA,CAACH,MAAM;MAACa,MAAM,EAAEA;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEhB,CAAC;AAAAlB,EAAA,CA1CKD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}