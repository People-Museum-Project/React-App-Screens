{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kayva\\\\React-App-Screens\\\\src\\\\components\\\\Conversation\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Box, Typography, IconButton } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport QuestionForm from './QuestionForm';\nimport QuestionList from './QuestionList';\nimport Answer from './Answer';\nimport './Conversation.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Conversation = () => {\n  _s();\n  const {\n    personId\n  } = useParams();\n  const [person, setPerson] = useState(null);\n  const [questions] = useState([\"How did you free yourself and others during the Civil War?\", \"Where did you sail the commandeered ship to in 1862?\"]);\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  useEffect(() => {\n    fetchPersonData(personId);\n  }, [personId]);\n  const fetchPersonData = async id => {\n    try {\n      const response = await fetch('https://peoplemuseumyeah.uc.r.appspot.com/db/getPerson', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          personId: id\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setPerson(data.person);\n      } else {\n        console.error(data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching person data:', error);\n    }\n  };\n  const handleAskQuestion = question => {\n    setSelectedQuestion(question);\n    generateAnswer(question);\n  };\n  const generateAnswer = question => {\n    if (question === \"How did you free yourself and others during the Civil War?\") {\n      setAnswer(\"I am Robert Smalls, and I am proud to share how I freed myself and others during the Civil War. On that daring night of May 13, 1862, I made a bold decision to seize control of the Confederate transport ship CSS Planter in Charleston harbor...\");\n    } else if (question === \"Where did you sail the commandeered ship to in 1862?\") {\n      setAnswer(\"After commandeering the ship, I navigated the CSS Planter past Confederate forts and delivered it to the Union forces blockading Charleston Harbor...\");\n    } else {\n      setAnswer(\"This is a placeholder answer for the question: \" + question);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: person ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"header\",\n        sx: {\n          textAlign: 'center',\n          mb: 3,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: person.imageLink,\n          alt: person.name,\n          style: {\n            maxWidth: 300,\n            height: 'auto',\n            borderRadius: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          sx: {\n            mt: 4,\n            mb: 2\n          },\n          children: [\"Ask \", person.name, \" a Question\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 4\n          },\n          children: [\"Description: \", person.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          component: Link,\n          to: `/update-person/${personId}`,\n          variant: \"outlined\",\n          color: \"primary\",\n          sx: {\n            position: 'absolute',\n            top: 16,\n            right: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        questions: questions,\n        onSelectQuestion: handleAskQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuestionForm, {\n        onAskQuestion: handleAskQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), selectedQuestion && /*#__PURE__*/_jsxDEV(Answer, {\n        answer: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        textAlign: 'center',\n        mt: 4\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"JxWh7bdTifaV4NgA6N2mqEInCwk=\", false, function () {\n  return [useParams];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Container","Box","Typography","IconButton","EditIcon","QuestionForm","QuestionList","Answer","jsxDEV","_jsxDEV","Fragment","_Fragment","Conversation","_s","personId","person","setPerson","questions","selectedQuestion","setSelectedQuestion","answer","setAnswer","fetchPersonData","id","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","error","message","handleAskQuestion","question","generateAnswer","maxWidth","children","component","sx","textAlign","mb","position","src","imageLink","alt","name","style","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","variant","mt","description","to","color","top","right","onSelectQuestion","onAskQuestion","_c","$RefreshReg$"],"sources":["C:/Users/kayva/React-App-Screens/src/components/Conversation/Conversation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Container, Box, Typography, IconButton } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport QuestionForm from './QuestionForm';\r\nimport QuestionList from './QuestionList';\r\nimport Answer from './Answer';\r\nimport './Conversation.css';\r\n\r\nconst Conversation = () => {\r\n  const { personId } = useParams();\r\n  const [person, setPerson] = useState(null);\r\n  const [questions] = useState([\r\n    \"How did you free yourself and others during the Civil War?\",\r\n    \"Where did you sail the commandeered ship to in 1862?\"\r\n  ]);\r\n  const [selectedQuestion, setSelectedQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPersonData(personId);\r\n  }, [personId]);\r\n\r\n  const fetchPersonData = async (id) => {\r\n    try {\r\n      const response = await fetch('https://peoplemuseumyeah.uc.r.appspot.com/db/getPerson', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ personId: id }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setPerson(data.person);\r\n      } else {\r\n        console.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching person data:', error);\r\n    }\r\n  };\r\n\r\n  const handleAskQuestion = (question) => {\r\n    setSelectedQuestion(question);\r\n    generateAnswer(question);\r\n  };\r\n\r\n  const generateAnswer = (question) => {\r\n    if (question === \"How did you free yourself and others during the Civil War?\") {\r\n      setAnswer(\"I am Robert Smalls, and I am proud to share how I freed myself and others during the Civil War. On that daring night of May 13, 1862, I made a bold decision to seize control of the Confederate transport ship CSS Planter in Charleston harbor...\");\r\n    } else if (question === \"Where did you sail the commandeered ship to in 1862?\") {\r\n      setAnswer(\"After commandeering the ship, I navigated the CSS Planter past Confederate forts and delivered it to the Union forces blockading Charleston Harbor...\");\r\n    } else {\r\n      setAnswer(\"This is a placeholder answer for the question: \" + question);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {person ? (\r\n        <>\r\n          <Box component=\"header\" sx={{ textAlign: 'center', mb: 3, position: 'relative' }}>\r\n            <img src={person.imageLink} alt={person.name} style={{ maxWidth: 300, height: 'auto', borderRadius: 8 }} />\r\n            <Typography variant=\"h4\" component=\"h2\" sx={{ mt: 4, mb: 2 }}>\r\n              Ask {person.name} a Question\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ mb: 4 }}>\r\n              Description: {person.description}\r\n            </Typography>\r\n            <IconButton\r\n              component={Link}\r\n              to={`/update-person/${personId}`}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              sx={{ position: 'absolute', top: 16, right: 16 }}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <QuestionList questions={questions} onSelectQuestion={handleAskQuestion} />\r\n          <QuestionForm onAskQuestion={handleAskQuestion} />\r\n          {selectedQuestion && <Answer answer={answer} />}\r\n        </>\r\n      ) : (\r\n        <Typography variant=\"h6\" sx={{ textAlign: 'center', mt: 4 }}>\r\n          Loading...\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}